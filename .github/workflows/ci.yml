name: CI

on:
  push:
    branches: ["*"]
  workflow_dispatch:
  workflow_call:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Check Version
        run: ci/check_version.sh

      - name: Restore cargo cache
        uses: actions/cache@v2
        env:
          cache-name: ci
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            rust/target
          key: ubuntu-${{ env.cache-name }}-${{ hashFiles('rust/Cargo.lock') }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal
          components: clippy, rustfmt

      - name: Build Debug
        run: cd rust && cargo build

      - name: Run tests
        run: cd rust && cargo test

      - name: Run clippy
        run: cd rust && cargo clippy

      - name: Check formatting
        run: cd rust && cargo fmt -- --check

      - name: Test Python Package
        run: |
          ./pw install
          ./pw test

      - name: Check types
        run: |
          ./pw types

      - name: Build Wheel
        run: |
          ./pw build

      - name: Copy wheel to out
        run: |
          mkdir -p out
          cp dist/*.whl out/

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.0.5"
          channel: "stable"

      - name: Run Flutter tests
        run: |
          cd dart/broadcast_wsrpc
          flutter pub get
          flutter test

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build_artifacts
          path: |
            out/*.whl
